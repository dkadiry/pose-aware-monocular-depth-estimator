dataset_parameters:
  images_folder: 'data/cedarbay/images'
  depth_maps_folder: 'data/cedarbay/depth_maps'
  image_height: 768
  image_width: 1024
  image_channels: 3
  depth_channels: 1
  batch_size: 8
  training_ratio: 0.80
  validation_ratio: 0.15
  test_ratio: 0.05
  shuffle: True
  crop_pixels: 120  # Based on empirical analysis
  pose_csv_path: 'data/cedarbay/Filtered_Absolute_FFC_Pose_Euler.csv'  # Path to pose CSV
  pose_channels:
    vanilla: 0  # No pose channels for vanilla model
    rel_z: 1  # Relative/ Absolute Z for Model 2
    pitch_roll: 2 
    rel_z_pitch_roll: 3  # Relative Z, Pitch, Roll for Model 3
  percentiles_path: 'utils/percentiles.npz'
  pose_normalization_params_path: "data/cedarbay/absolute_pose_stats.json"

experiment_parameters:
  model_variant: 'vanilla' # 'vanilla', 'rel_z' or 'rel_z_pitch_roll'
  learning_rate: 0.00001
  epochs: 50
  optimizer: 'adam'
  loss_function: 'mse' # Unused since we have a custom loss function
  metrics:
    - 'mae'
    - 'mse'
  models:
    vanilla:
      saved_model_dir: 'saved_models/cedarbay_vanilla_model_unet_v3'
      checkpoint_dir: 'checkpoints/cedarbay_vanilla_v3'
      checkpoint_file: 'checkpoints/cedarbay_vanilla_v3/cedarbay_vanilla_model_v3_unet-{epoch:02d}.ckpt'
    rel_z:
      saved_model_dir: 'saved_models/cedarbay_abs_z_model_unet'
      checkpoint_dir: 'checkpoints/cedarbay_abs_z'
      checkpoint_file: 'checkpoints/cedarbay_abs_z/cedarbay_abs_z_model_unet-{epoch:02d}.ckpt'
    pitch_roll:
      saved_model_dir: 'saved_models/cedarbay_pitch_roll_model_unet_nsmpr'
      checkpoint_dir: 'checkpoints/cedarbay_pitch_roll_nsmpr'
      checkpoint_file: 'checkpoints/cedarbay_pitch_roll_nsmpr/cedarbay_pitch_roll_model_unet_nsmpr-{epoch:02d}.ckpt'
    rel_z_pitch_roll:
      saved_model_dir: 'saved_models/cedarbay_rel_z_pitch_roll_model_unet_nsmpr'
      checkpoint_dir: 'checkpoints/cedarbay_rel_z_pitch_roll_nsmpr'
      checkpoint_file: 'checkpoints/cedarbay_rel_z_pitch_roll_nsmpr/cedarbay_rel_z_pitch_roll_model_unet_nsmpr-{epoch:02d}.ckpt'
  pretrain: True  # Set to True to load pre-trained weights

model_parameters:
  input_shapes:
    vanilla: [768, 1024, 3]  # image_height x image_width x channels
    rel_z: [768, 1024, 4]
    pitch_roll: [768, 1024, 5]
    rel_z_pitch_roll: [768, 1024, 6]
  num_classes: 1  # Depth estimation is a regression task

logging_parameters:
  tensorboard_log_dir: 'logs/tensorboard'